# Generated by Django 3.2.7 on 2022-02-20 05:51

from django.db import migrations

# Can't import these from the vm_manager.models module because
# the names and values are code version dependent
EXP_EXPIRED = 3
EXP_EXPIRING = 3
EXP_EXPIRY_COMPLETED = 4
EXP_EXPIRY_FAILED = 5
EXP_EXPIRY_FAILED_RETRYABLE = 6


class Migration(migrations.Migration):
    """This migration adds two new expiry 'stage' values.

    The final stage used to be 3 (EXP_EXPIRED).  This is replaced by 4 stages:
      - 3 (EXP_EXPIRING) an expiry workflow is (should be) running
      - 4 (EXP_EXPIRY_COMPLETED) expiry succeeded
      - 5 (EXP_EXPIRY_FAILED) expiry failed
      - 6 (EXP_EXPIRY_FAILED_RETRYABLE) expiry failed but can be retried.
    """

    def convert_stages(apps, schema_editor):
        ResourceExpiration = apps.get_model(
            "vm_manager", "ResourceExpiration")
        ResizeExpiration = apps.get_model("vm_manager", "ResizeExpiration")
        for e in ResourceExpiration.objects.all():
            if e.stage == EXP_EXPIRED:
                e.stage == EXP_EXPIRY_COMPLETED
                e.save()
        for e in ResizeExpiration.objects.all():
            if e.stage == EXP_EXPIRED:
                e.stage == EXP_EXPIRY_COMPLETED
                e.save()

    def revert_stages(apps, schema_editor):
        ResourceExpiration = apps.get_model(
            "vm_manager", "ResourceExpiration")
        ResizeExpiration = apps.get_model("vm_manager", "ResizeExpiration")
        for e in ResourceExpiration.objects.all():
            if e.stage in (EXP_EXPIRY_COMPLETED, EXP_EXPIRY_FAILED,
                           EXP_EXPIRY_FAILED_RETRYABLE, EXP_EXPIRING):
                e.stage == EXP_EXPIRED
                e.save()
        for e in ResizeExpiration.objects.all():
            if e.stage in (EXP_EXPIRY_COMPLETED, EXP_EXPIRY_FAILED,
                           EXP_EXPIRY_FAILED_RETRYABLE, EXP_EXPIRING):
                e.stage == EXP_EXPIRED
                e.save()

    dependencies = [
        ('vm_manager', '0012_add_vmstatus_completion_message'),
    ]

    operations = [
        migrations.RunPython(convert_stages, revert_stages)
    ]
