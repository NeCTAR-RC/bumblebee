# Generated by Django 3.2.4 on 2021-07-08 23:15

from django.conf import settings
import django.contrib.auth.models
from django.contrib.auth import validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(
                    auto_created=True, primary_key=True, serialize=False,
                    verbose_name='ID')),
                ('password', models.CharField(
                    max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(
                    blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(
                    default=False,
                    help_text='Designates that this user has all '
                    'permissions without explicitly assigning them.',
                    verbose_name='superuser status')),
                ('username', models.CharField(
                    error_messages={
                        'unique': 'A user with that username already exists.'},
                    help_text='Required. 150 characters or fewer. Letters, '
                    'digits and @/./+/-/_ only.',
                    max_length=150, unique=True,
                    validators=[validators.UnicodeUsernameValidator()],
                    verbose_name='username')),
                ('first_name', models.CharField(
                    blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(
                    blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(
                    blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(
                    default=False,
                    help_text='Designates whether the user can log into '
                    'this admin site.',
                    verbose_name='staff status')),
                ('is_active', models.BooleanField(
                    default=True,
                    help_text='Designates whether this user should be '
                    'treated as active. Unselect this instead of '
                    'deleting accounts.',
                    verbose_name='active')),
                ('date_joined', models.DateTimeField(
                    default=django.utils.timezone.now,
                    verbose_name='date joined')),
                ('groups', models.ManyToManyField(
                    blank=True,
                    help_text='The groups this user belongs to. A user will '
                    'get all permissions granted to each of their groups.',
                    related_name='user_set', related_query_name='user',
                    to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(
                    blank=True,
                    help_text='Specific permissions for this user.',
                    related_name='user_set', related_query_name='user',
                    to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.AutoField(
                    auto_created=True, primary_key=True,
                    serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('app_name', models.CharField(
                    blank=True, max_length=50, null=True, unique=True)),
                ('currently_available', models.BooleanField(default=False)),
                ('feature_or_service', models.BooleanField(default=True)),
                ('auto_approved', models.BooleanField(default=False)),
                ('beta', models.BooleanField(default=False)),
                ('closed_beta', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='FeatureOptions',
            fields=[
                ('id', models.AutoField(
                    auto_created=True, primary_key=True, serialize=False,
                    verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.AutoField(
                    auto_created=True, primary_key=True, serialize=False,
                    verbose_name='ID')),
                ('feature', models.ForeignKey(
                    on_delete=django.db.models.deletion.PROTECT,
                    to='researcher_workspace.feature')),
                ('feature_options', models.ManyToManyField(
                    blank=True, to='researcher_workspace.FeatureOptions')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(
                    auto_created=True, primary_key=True,
                    serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('sensitive_data', models.BooleanField(default=False)),
                ('FoR_code', models.CharField(choices=[], max_length=6)),
                ('FoR_code2', models.CharField(
                    blank=True, choices=[], max_length=6)),
                ('ARO', models.CharField(max_length=100)),
                ('ARO_approval', models.BooleanField(blank=True, null=True)),
                ('ARO_responded_on', models.DateTimeField(
                    blank=True, null=True)),
                ('additional_comments', models.TextField(
                    blank=True, null=True)),
                ('admin_comments', models.TextField(
                    blank=True, null=True,
                    verbose_name='Admin comments (not visible by users)')),
                ('permissions', models.ManyToManyField(
                    through='researcher_workspace.Permission',
                    to='researcher_workspace.Feature')),
                ('project_admin', models.ForeignKey(
                    on_delete=django.db.models.deletion.PROTECT,
                    to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(
                    auto_created=True, primary_key=True,
                    serialize=False, verbose_name='ID')),
                ('last_selected_project', models.ForeignKey(
                    blank=True, null=True,
                    on_delete=django.db.models.deletion.SET_NULL,
                    to='researcher_workspace.project')),
                ('user', models.OneToOneField(
                    on_delete=django.db.models.deletion.CASCADE,
                    to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PermissionRequest',
            fields=[
                ('id', models.AutoField(
                    auto_created=True, primary_key=True,
                    serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('accepted', models.BooleanField(blank=True, null=True)),
                ('responded_on', models.DateTimeField(blank=True, null=True)),
                ('feature_options', models.ManyToManyField(
                    blank=True, to='researcher_workspace.FeatureOptions')),
                ('project', models.ForeignKey(
                    on_delete=django.db.models.deletion.PROTECT,
                    to='researcher_workspace.project')),
                ('requested_feature', models.ForeignKey(
                    on_delete=django.db.models.deletion.PROTECT,
                    to='researcher_workspace.feature')),
                ('requesting_user', models.ForeignKey(
                    on_delete=django.db.models.deletion.PROTECT,
                    to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='permission',
            name='project',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to='researcher_workspace.project'),
        ),
        migrations.AddField(
            model_name='feature',
            name='options',
            field=models.ManyToManyField(
                blank=True, to='researcher_workspace.FeatureOptions'),
        ),
        migrations.CreateModel(
            name='AROWhitelist',
            fields=[
                ('id', models.AutoField(
                    auto_created=True, primary_key=True,
                    serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=100, unique=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('permission_granted_by', models.ForeignKey(
                    on_delete=django.db.models.deletion.PROTECT,
                    to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ARO whitelist',
                'verbose_name_plural': 'ARO whitelist',
            },
        ),
    ]
